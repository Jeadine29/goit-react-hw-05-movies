{"version":3,"file":"static/js/210.04d70ee2.chunk.js","mappings":"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","sources":["Api/apiService.js","Pages/Home/Home.styled.js","components/Styles/Element.styled.js","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchInput.jsx","components/SearchBar/SearchBar.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '732c031b5e22cf5334b3992a5f6775ca';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to handle it in the component\n  }\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;","import styled from 'styled-components';\n\nconst SearchBox = styled.div``;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  // border: none;\n  // outline: none;\n  padding: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nconst ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border: none;\n  border-radius: 15px;\n  background-color: #3f51b5;\n  color: white;\n\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  cursor: pointer;\n  transition: background-color 250ms linear;\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nconst P = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin: 0px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\nconst Gallery = styled.ul`\n  padding-top: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  gap: 20px;\n  list-style: none;\n`;\n\nconst GalleryItem = styled.li`\n  display: block;\n  flex-basis: calc((100% - 60px) / 4);\n  height: auto;\n  overflow: hidden;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport { SearchBox, P, Form, ButtonIcon, Input, Button, Gallery, GalleryItem };","\nimport PropTypes from 'prop-types';\nimport { Form } from './../Styles/Element.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Input } from 'components/Styles/Element.styled';\n\nconst SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;","\nimport { ButtonIcon, SearchBox } from 'components/Styles/Element.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport SearchForm from './SearchForm';\nimport SearchInput from './SearchInput';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => (\n  <SearchBox>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <ButtonIcon type=\"submit\" aria-label=\"search button\">\n        <BsSearch />\n      </ButtonIcon>\n    </SearchForm>\n  </SearchBox>\n);\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList, MovieLink } from 'Pages/Home/Home.styled';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from './../../Api/apiService';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchBar } from './../../components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log(\n          'There is no movies with this request. Please, try again'\n        );\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <p>There is no movies with this request. Please, try again</p>}\n      <MovieList>\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </MovieLink>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </MovieList>\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["API_KEY","axios","getTrending","async","concat","data","error","console","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","MovieLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieList","_templateObject2","Title","_templateObject3","SearchBox","Form","Input","ButtonIcon","_templateObject4","_templateObject5","p","theme","space","_templateObject6","colors","black","fonts","body","fontSizes","m","_templateObject7","_templateObject8","_ref","onSubmit","children","_jsx","SearchInput","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","_jsxs","SearchForm","BsSearch","Movies","_searchParams$get","location","useLocation","searchParams","setSearchParams","useSearchParams","movieName","get","moviesList","setMoviesList","useState","isLoading","setIsLoading","setError","useEffect","then","results","length","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","to","state","from","original_title","Loader"],"sourceRoot":""}